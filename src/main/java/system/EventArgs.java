/*
 * ProActive Parallel Suite(TM):
 * The Open Source library for parallel and distributed
 * Workflows & Scheduling, Orchestration, Cloud Automation
 * and Big Data Analysis on Enterprise Grids & Clouds.
 *
 * Copyright (c) 2007 - 2017 ActiveEon
 * Contact: contact@activeeon.com
 *
 * This library is free software: you can redistribute it and/or
 * modify it under the terms of the GNU Affero General Public License
 * as published by the Free Software Foundation: version 3 of
 * the License.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 *
 * If needed, contact us to obtain a release under GPL Version 2 or 3
 * or a different license than the AGPL.
 */
package system;

// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by jni4net. See http://jni4net.sourceforge.net/
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

@net.sf.jni4net.attributes.ClrType
public class EventArgs extends system.Object {

    //<generated-proxy>
    private static system.Type staticType;

    protected EventArgs(net.sf.jni4net.inj.INJEnv __env, long __handle) {
        super(__env, __handle);
    }

    @net.sf.jni4net.attributes.ClrConstructor("()V")
    public EventArgs() {
        super(((net.sf.jni4net.inj.INJEnv) (null)), 0);
        system.EventArgs.__ctorEventArgs0(this);
    }

    @net.sf.jni4net.attributes.ClrMethod("()V")
    private native static void __ctorEventArgs0(net.sf.jni4net.inj.IClrProxy thiz);

    public static system.Type typeof() {
        return system.EventArgs.staticType;
    }

    private static void InitJNI(net.sf.jni4net.inj.INJEnv env, system.Type staticType) {
        system.EventArgs.staticType = staticType;
    }
    //</generated-proxy>
}
