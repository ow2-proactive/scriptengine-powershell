/*
 * ProActive Parallel Suite(TM):
 * The Open Source library for parallel and distributed
 * Workflows & Scheduling, Orchestration, Cloud Automation
 * and Big Data Analysis on Enterprise Grids & Clouds.
 *
 * Copyright (c) 2007 - 2017 ActiveEon
 * Contact: contact@activeeon.com
 *
 * This library is free software: you can redistribute it and/or
 * modify it under the terms of the GNU Affero General Public License
 * as published by the Free Software Foundation: version 3 of
 * the License.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 *
 * If needed, contact us to obtain a release under GPL Version 2 or 3
 * or a different license than the AGPL.
 */
package system.management.automation;

// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by jni4net. See http://jni4net.sourceforge.net/
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

@net.sf.jni4net.attributes.ClrType
public class PSObject extends system.Object
        implements system.IFormattable, system.IComparable, system.runtime.serialization.ISerializable {

    //<generated-proxy>
    private static system.Type staticType;

    protected PSObject(net.sf.jni4net.inj.INJEnv __env, long __handle) {
        super(__env, __handle);
    }

    @net.sf.jni4net.attributes.ClrConstructor("()V")
    public PSObject() {
        super(((net.sf.jni4net.inj.INJEnv) (null)), 0);
        system.management.automation.PSObject.__ctorPSObject0(this);
    }

    @net.sf.jni4net.attributes.ClrConstructor("(LSystem/Object;)V")
    public PSObject(system.Object obj) {
        super(((net.sf.jni4net.inj.INJEnv) (null)), 0);
        system.management.automation.PSObject.__ctorPSObject1(this, obj);
    }

    @net.sf.jni4net.attributes.ClrMethod("()V")
    private native static void __ctorPSObject0(net.sf.jni4net.inj.IClrProxy thiz);

    @net.sf.jni4net.attributes.ClrMethod("(Lsystem/Object;)V")
    private native static void __ctorPSObject1(net.sf.jni4net.inj.IClrProxy thiz, system.Object obj);

    @net.sf.jni4net.attributes.ClrMethod("(LSystem/String;LSystem/IFormatProvider;)LSystem/String;")
    public native java.lang.String ToString(java.lang.String format, system.IFormatProvider formatProvider);

    @net.sf.jni4net.attributes.ClrMethod("(LSystem/Object;)I")
    public native int CompareTo(system.Object obj);

    @net.sf.jni4net.attributes.ClrMethod("(LSystem/Runtime/Serialization/SerializationInfo;LSystem/Runtime/Serialization/StreamingContext;)V")
    public native void GetObjectData(system.runtime.serialization.SerializationInfo info,
            system.runtime.serialization.StreamingContext context);

    @net.sf.jni4net.attributes.ClrMethod("(LSystem/Linq/Expressions/Expression;)LSystem/Dynamic/DynamicMetaObject;")
    public native system.Object GetMetaObject(system.Object parameter);

    @net.sf.jni4net.attributes.ClrMethod("()[[LSystem/Management/Automation/PSMemberInfoCollection`1;")
    public native system.Object getMembers();

    @net.sf.jni4net.attributes.ClrMethod("()[[LSystem/Management/Automation/PSMemberInfoCollection`1;")
    public native system.Object getProperties();

    @net.sf.jni4net.attributes.ClrMethod("()[[LSystem/Management/Automation/PSMemberInfoCollection`1;")
    public native system.Object getMethods();

    @net.sf.jni4net.attributes.ClrMethod("()LSystem/Object;")
    public native system.Object getImmediateBaseObject();

    @net.sf.jni4net.attributes.ClrMethod("()LSystem/Object;")
    public native system.Object getBaseObject();

    @net.sf.jni4net.attributes.ClrMethod("()[[LSystem/Collections/ObjectModel/Collection`1;")
    public native system.Object getTypeNames();

    @net.sf.jni4net.attributes.ClrMethod("(LSystem/Object;)LSystem/Management/Automation/PSObject;")
    public native static system.management.automation.PSObject AsPSObject(system.Object obj);

    @net.sf.jni4net.attributes.ClrMethod("()LSystem/Management/Automation/PSObject;")
    public native system.management.automation.PSObject Copy();

    public static system.Type typeof() {
        return system.management.automation.PSObject.staticType;
    }

    private static void InitJNI(net.sf.jni4net.inj.INJEnv env, system.Type staticType) {
        system.management.automation.PSObject.staticType = staticType;
    }
    //</generated-proxy>
}
